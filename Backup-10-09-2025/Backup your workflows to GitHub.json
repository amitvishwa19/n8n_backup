{"createdAt":"2025-09-09T05:57:07.699Z","updatedAt":"2025-09-09T05:58:03.000Z","id":"XCo9AlrJ0DIclFTa","name":"Backup your workflows to GitHub","active":true,"isArchived":false,"nodes":[{"parameters":{},"id":"d9e56c91-8be8-4048-b8b5-73edb354d6d7","name":"On clicking 'execute'","type":"n8n-nodes-base.manualTrigger","position":[-768,-672],"typeVersion":1},{"parameters":{"filters":{},"requestOptions":{}},"id":"5b86cea0-910b-45c2-98e2-f8a5c236a957","name":"n8n","type":"n8n-nodes-base.n8n","position":[-512,-576],"typeVersion":1,"credentials":{"n8nApi":{"id":"VeOLbXqWZBB21vei","name":"n8n account"}}},{"parameters":{"assignments":{"assignments":[{"id":"8d513345-6484-431f-afb7-7cf045c90f4f","name":"Done","type":"boolean","value":true}]},"options":{}},"id":"a4155a6a-ef8d-4717-8fa6-f15dc1c5c9dd","name":"Return","type":"n8n-nodes-base.set","position":[592,96],"typeVersion":3.3},{"parameters":{"url":"={{ $json.download_url }}","options":{}},"id":"32c1e4d7-540a-4009-b330-888c1bbedb3e","name":"Get File","type":"n8n-nodes-base.httpRequest","position":[-304,-48],"typeVersion":4.2},{"parameters":{"conditions":{"options":{"version":1,"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"id":"45ce825e-9fa6-430c-8931-9aaf22c42585","operator":{"type":"string","operation":"empty","singleValue":true},"leftValue":"={{ $json.content }}","rightValue":""},{"id":"9619a55f-7fb1-4f24-b1a7-7aeb82365806","operator":{"type":"string","operation":"notExists","singleValue":true},"leftValue":"={{ $json.error }}","rightValue":""}]},"options":{}},"id":"975eb59d-b33e-40f5-87a2-3d229d875290","name":"If file too large","type":"n8n-nodes-base.if","position":[-512,-16],"typeVersion":2},{"parameters":{},"id":"7b36986a-39b2-4243-8df6-339f8cdfa5e2","name":"Merge Items","type":"n8n-nodes-base.merge","position":[-512,256],"typeVersion":2},{"parameters":{"jsCode":"const orderJsonKeys = (jsonObj) => {\n  const ordered = {};\n  Object.keys(jsonObj).sort().forEach(key => {\n    ordered[key] = jsonObj[key];\n  });\n  return ordered;\n}\n\n// Check if file returned with content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Decode base64 content and parse JSON\n  const origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64').toString());\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n// No file returned / new workflow\n} else if (Object.keys($input.all()[0].json).includes(\"data\")) {\n  const origWorkflow = JSON.parse($input.all()[0].json.data);\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n\n} else {\n  // Order JSON object\n  const n8nWorkflow = $input.all()[1].json;\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n  \n  // Proper formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return items\nreturn $input.all();"},"id":"a7961f55-fb88-4c3c-a0b5-f78bc4941672","name":"isDiffOrNew","type":"n8n-nodes-base.code","position":[-304,256],"typeVersion":1},{"parameters":{"dataType":"string","value1":"={{$json.github_status}}","rules":{"rules":[{"value2":"same"},{"value2":"different","output":1},{"value2":"new","output":2}]}},"id":"0da3fcdf-6c0b-4e96-a484-687040671e46","name":"Check Status","type":"n8n-nodes-base.switch","position":[-96,256],"typeVersion":1},{"parameters":{},"id":"ee097848-a8c5-4688-ac5d-eb2751d4d200","name":"Same file - Do nothing","type":"n8n-nodes-base.noOp","position":[128,96],"typeVersion":1},{"parameters":{},"id":"c952aeb9-15eb-4a69-83d9-db0707d311f9","name":"File is different","type":"n8n-nodes-base.noOp","position":[128,256],"typeVersion":1},{"parameters":{},"id":"acc3905d-df36-4cac-8485-7569fd4c45d6","name":"File is new","type":"n8n-nodes-base.noOp","position":[128,416],"typeVersion":1},{"parameters":{"resource":"file","owner":{"__rl":true,"mode":"name","value":"={{ $('Globals').item.json.repo.owner }}"},"repository":{"__rl":true,"mode":"name","value":"={{ $('Globals').item.json.repo.name }}"},"filePath":"={{ $('Globals').item.json.repo.path }}{{$('Execute Workflow Trigger').first().json.id}}.json","fileContent":"={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}","commitMessage":"={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})"},"id":"ba33d6b5-e977-41ba-91d9-8d98bd7bd8de","name":"Create new file","type":"n8n-nodes-base.github","position":[352,416],"webhookId":"e5e4ce8b-74a3-4b94-83ca-351edc280faf","typeVersion":1,"credentials":{"githubApi":{"id":"ep0tN9S6DnQS5et2","name":"GitHub account"}}},{"parameters":{"resource":"file","operation":"edit","owner":{"__rl":true,"mode":"name","value":"={{ $('Globals').item.json.repo.owner }}"},"repository":{"__rl":true,"mode":"name","value":"={{ $('Globals').item.json.repo.name }}"},"filePath":"={{ $('Globals').item.json.repo.path }}{{$('Execute Workflow Trigger').first().json.id}}.json","fileContent":"={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}","commitMessage":"={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})"},"id":"08e0fc30-133f-4cc1-ad71-4342b51eb0c2","name":"Edit existing file","type":"n8n-nodes-base.github","position":[352,240],"webhookId":"a57e71de-4960-4d25-a59f-1a9e2e96aff5","typeVersion":1,"credentials":{"githubApi":{"id":"ep0tN9S6DnQS5et2","name":"GitHub account"}}},{"parameters":{"options":{}},"id":"ae5c995b-0075-4325-b393-28bd4c90a62c","name":"Loop Over Items","type":"n8n-nodes-base.splitInBatches","position":[-304,-576],"typeVersion":3},{"parameters":{"rule":{"interval":[{"field":"hours","hoursInterval":6}]}},"id":"6c8c9dea-e5d3-485b-a848-54a8a46585f7","name":"Schedule Trigger","type":"n8n-nodes-base.scheduleTrigger","position":[-768,-480],"typeVersion":1.2},{"parameters":{"content":"## Main workflow loop","height":435,"width":886,"color":7},"id":"bf323e7a-5e17-4e5c-a1a3-1bfc203aaadd","name":"Sticky Note2","type":"n8n-nodes-base.stickyNote","position":[-816,-752],"typeVersion":1},{"parameters":{"resource":"file","operation":"get","owner":{"__rl":true,"mode":"name","value":"={{ $json.repo.owner }}"},"repository":{"__rl":true,"mode":"name","value":"={{ $json.repo.name }}"},"filePath":"={{ $json.repo.path }}{{ $('Execute Workflow Trigger').item.json.id }}.json","asBinaryProperty":false,"additionalParameters":{}},"id":"5c2eadee-eff1-4111-af81-285756cf54d3","name":"Get file data","type":"n8n-nodes-base.github","position":[-704,-16],"webhookId":"743111c3-2c21-4658-8097-a9fe966f43d2","typeVersion":1,"alwaysOutputData":true,"credentials":{"githubApi":{"id":"ep0tN9S6DnQS5et2","name":"GitHub account"}},"continueOnFail":true},{"parameters":{"assignments":{"assignments":[{"id":"6cf546c5-5737-4dbd-851b-17d68e0a3780","name":"repo.owner","type":"string","value":"amitvishwa19"},{"id":"452efa28-2dc6-4ea3-a7a2-c35d100d0382","name":"repo.name","type":"string","value":"n8n-backup-v2"},{"id":"81c4dc54-86bf-4432-a23f-22c7ea831e74","name":"repo.path","type":"string","value":"workflows/"}]},"options":{}},"id":"b173247b-2043-48c9-9aac-4eb8e1189fb2","name":"Globals","type":"n8n-nodes-base.set","position":[-928,160],"typeVersion":3.4},{"parameters":{"inputSource":"passthrough"},"id":"1d5b2cb1-e736-4d09-822f-3040f13df329","name":"Execute Workflow Trigger","type":"n8n-nodes-base.executeWorkflowTrigger","position":[-1216,272],"typeVersion":1.1},{"parameters":{"workflowId":{"__rl":true,"mode":"id","value":"={{ $workflow.id }}"},"workflowInputs":{"value":{},"schema":[],"mappingMode":"defineBelow","matchingColumns":[],"attemptToConvertTypes":false,"convertFieldsToString":true},"mode":"each","options":{}},"id":"9381d092-63d5-4084-8c96-2b596ae5bec1","name":"Execute Workflow","type":"n8n-nodes-base.executeWorkflow","position":[-96,-576],"typeVersion":1.2},{"parameters":{"content":"## Edit this node ðŸ‘‡","height":80,"width":150,"color":4},"id":"c560da6e-6b43-4f3f-a8a0-becdcefe92e2","name":"Sticky Note3","type":"n8n-nodes-base.stickyNote","position":[-976,48],"typeVersion":1},{"parameters":{"content":"## Subworkflow","height":750.8363163824032,"width":2086.845881354743,"color":6},"id":"528c368a-b08c-409f-a2a2-fbb81ed91abe","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","position":[-1296,-128],"typeVersion":1}],"connections":{"On clicking 'execute'":{"main":[[{"node":"n8n","type":"main","index":0}]]},"n8n":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Get File":{"main":[[{"node":"Merge Items","type":"main","index":0}]]},"If file too large":{"main":[[{"node":"Get File","type":"main","index":0}],[{"node":"Merge Items","type":"main","index":0}]]},"Merge Items":{"main":[[{"node":"isDiffOrNew","type":"main","index":0}]]},"isDiffOrNew":{"main":[[{"node":"Check Status","type":"main","index":0}]]},"Check Status":{"main":[[{"node":"Same file - Do nothing","type":"main","index":0}],[{"node":"File is different","type":"main","index":0}],[{"node":"File is new","type":"main","index":0}]]},"Same file - Do nothing":{"main":[[{"node":"Return","type":"main","index":0}]]},"File is different":{"main":[[{"node":"Edit existing file","type":"main","index":0}]]},"File is new":{"main":[[{"node":"Create new file","type":"main","index":0}]]},"Create new file":{"main":[[{"node":"Return","type":"main","index":0}]]},"Edit existing file":{"main":[[{"node":"Return","type":"main","index":0}]]},"Loop Over Items":{"main":[[],[{"node":"Execute Workflow","type":"main","index":0}]]},"Schedule Trigger":{"main":[[{"node":"n8n","type":"main","index":0}]]},"Get file data":{"main":[[{"node":"If file too large","type":"main","index":0}]]},"Globals":{"main":[[{"node":"Get file data","type":"main","index":0}]]},"Execute Workflow Trigger":{"main":[[{"node":"Globals","type":"main","index":0},{"node":"Merge Items","type":"main","index":1}]]},"Execute Workflow":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]}},"settings":{},"staticData":{"node:Schedule Trigger":{"recurrenceRules":[]}},"meta":null,"pinData":{},"versionId":"e6864500-01c1-41a5-9c8c-f818a989814b","triggerCount":1,"shared":[{"createdAt":"2025-09-09T05:57:07.742Z","updatedAt":"2025-09-09T05:57:07.742Z","role":"workflow:owner","workflowId":"XCo9AlrJ0DIclFTa","projectId":"LcKquKU3RqmibYpm"}],"tags":[]}