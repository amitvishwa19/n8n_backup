{
  "active": true,
  "connections": {
    "n8n": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Globals": {
      "main": [
        [
          {
            "node": "Get file data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get File": {
      "main": [
        [
          {
            "node": "Merge Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File is new": {
      "main": [
        [
          {
            "node": "Create new file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge Items": {
      "main": [
        [
          {
            "node": "isDiffOrNew",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "isDiffOrNew": {
      "main": [
        [
          {
            "node": "Check Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Status": {
      "main": [
        [
          {
            "node": "Same file - Do nothing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "File is different",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "File is new",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get file data": {
      "main": [
        [
          {
            "node": "If file too large",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create new file": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Code in JavaScript",
            "type": "main",
            "index": 0
          },
          {
            "node": "Check for Readme",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Execute Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "n8n",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File is different": {
      "main": [
        [
          {
            "node": "Edit existing file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If file too large": {
      "main": [
        [
          {
            "node": "Get File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit existing file": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "On clicking 'execute'": {
      "main": [
        [
          {
            "node": "n8n",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Same file - Do nothing": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "Globals",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge Items",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Edit Readme",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Create Readme",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check for Readme": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Readme": {
      "main": [
        []
      ]
    },
    "Create Readme": {
      "main": [
        []
      ]
    },
    "Code in JavaScript": {
      "main": [
        [
          {
            "node": "Send Success Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Slack Trigger": {
      "main": [
        [
          {
            "node": "n8n",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-10-03T05:47:21.115Z",
  "id": "fGnwvvsMQfD7xuoi",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Workflow Backup v2",
  "nodes": [
    {
      "parameters": {},
      "id": "27f65153-3bb7-4965-b6b9-a729a58cdb63",
      "name": "On clicking 'execute'",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        -976,
        -512
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "filters": {},
        "requestOptions": {}
      },
      "id": "d47cc19c-e8dd-4c4b-b2a7-78cc008e9df9",
      "name": "n8n",
      "type": "n8n-nodes-base.n8n",
      "position": [
        -416,
        -368
      ],
      "typeVersion": 1,
      "credentials": {
        "n8nApi": {
          "id": "IvZmHSpEaf6BdzTz",
          "name": "n8n account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8d513345-6484-431f-afb7-7cf045c90f4f",
              "name": "Done",
              "type": "boolean",
              "value": true
            }
          ]
        },
        "options": {}
      },
      "id": "cf25924d-26cc-4068-ab5d-8a5df6894a83",
      "name": "Return",
      "type": "n8n-nodes-base.set",
      "position": [
        880,
        128
      ],
      "typeVersion": 3.3
    },
    {
      "parameters": {
        "url": "={{ $json.download_url }}",
        "options": {}
      },
      "id": "52f1d5d7-6720-4105-bfbd-e941265e8c1b",
      "name": "Get File",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -16,
        0
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 1,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "45ce825e-9fa6-430c-8931-9aaf22c42585",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              },
              "leftValue": "={{ $json.content }}",
              "rightValue": ""
            },
            {
              "id": "9619a55f-7fb1-4f24-b1a7-7aeb82365806",
              "operator": {
                "type": "string",
                "operation": "notExists",
                "singleValue": true
              },
              "leftValue": "={{ $json.error }}",
              "rightValue": ""
            }
          ]
        },
        "options": {}
      },
      "id": "a0f1ab47-efd6-4061-a63c-a804cdfdfe73",
      "name": "If file too large",
      "type": "n8n-nodes-base.if",
      "position": [
        -224,
        32
      ],
      "typeVersion": 2
    },
    {
      "parameters": {},
      "id": "ee0fac2d-329e-411e-b666-aa760cdc307f",
      "name": "Merge Items",
      "type": "n8n-nodes-base.merge",
      "position": [
        -224,
        288
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "jsCode": "const orderJsonKeys = (jsonObj) => {\n  const ordered = {};\n  Object.keys(jsonObj).sort().forEach(key => {\n    ordered[key] = jsonObj[key];\n  });\n  return ordered;\n}\n\n// Check if file returned with content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Decode base64 content and parse JSON\n  const origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64').toString());\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n// No file returned / new workflow\n} else if (Object.keys($input.all()[0].json).includes(\"data\")) {\n  const origWorkflow = JSON.parse($input.all()[0].json.data);\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n\n} else {\n  // Order JSON object\n  const n8nWorkflow = $input.all()[1].json;\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n  \n  // Proper formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return items\nreturn $input.all();"
      },
      "id": "626e4f5c-708e-45f7-aa24-78236746e1eb",
      "name": "isDiffOrNew",
      "type": "n8n-nodes-base.code",
      "position": [
        -16,
        288
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "dataType": "string",
        "value1": "={{$json.github_status}}",
        "rules": {
          "rules": [
            {
              "value2": "same"
            },
            {
              "value2": "different",
              "output": 1
            },
            {
              "value2": "new",
              "output": 2
            }
          ]
        }
      },
      "id": "182d6d7a-c8b0-4bb3-98dd-66261af0823b",
      "name": "Check Status",
      "type": "n8n-nodes-base.switch",
      "position": [
        192,
        288
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "4da53a56-feed-4348-8209-7c1dbe6c9756",
      "name": "Same file - Do nothing",
      "type": "n8n-nodes-base.noOp",
      "position": [
        416,
        128
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "f1dfc070-b605-4a62-9c4a-2c9365c1c291",
      "name": "File is different",
      "type": "n8n-nodes-base.noOp",
      "position": [
        416,
        288
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "b5c80513-a526-4abd-9a6a-dfdb0c9fa04d",
      "name": "File is new",
      "type": "n8n-nodes-base.noOp",
      "position": [
        416,
        448
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "file",
        "owner": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Globals').item.json.repo.owner }}"
        },
        "repository": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Globals').item.json.repo.name }}"
        },
        "filePath": "={{ $('Globals').item.json.repo.path }}{{$('Execute Workflow Trigger').first().json.id}}.json",
        "fileContent": "={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}",
        "commitMessage": "={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})"
      },
      "id": "e729003c-7703-4292-9bd3-413a101c9630",
      "name": "Create new file",
      "type": "n8n-nodes-base.github",
      "position": [
        640,
        448
      ],
      "webhookId": "e5e4ce8b-74a3-4b94-83ca-351edc280faf",
      "typeVersion": 1,
      "credentials": {
        "githubApi": {
          "id": "pIwtQRU9cVvbgSTE",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "edit",
        "owner": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Globals').item.json.repo.owner }}"
        },
        "repository": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Globals').item.json.repo.name }}"
        },
        "filePath": "={{ $('Globals').item.json.repo.path }}{{$('Execute Workflow Trigger').first().json.id}}.json",
        "fileContent": "={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}",
        "commitMessage": "={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})"
      },
      "id": "2ee95151-2e26-4f06-94f0-29e99337c762",
      "name": "Edit existing file",
      "type": "n8n-nodes-base.github",
      "position": [
        640,
        272
      ],
      "webhookId": "a57e71de-4960-4d25-a59f-1a9e2e96aff5",
      "typeVersion": 1,
      "credentials": {
        "githubApi": {
          "id": "pIwtQRU9cVvbgSTE",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "ce515c20-bf7e-47e5-9aad-f149b94c7ec8",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        -208,
        -368
      ],
      "typeVersion": 3,
      "executeOnce": false,
      "alwaysOutputData": false,
      "retryOnFail": false
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours",
              "hoursInterval": 12
            }
          ]
        }
      },
      "id": "be15ac85-85f2-45fd-b0d3-27693377b9e2",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        -976,
        -384
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "get",
        "owner": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $json.repo.owner }}"
        },
        "repository": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $json.repo.name }}"
        },
        "filePath": "={{ $json.repo.path }}{{ $('Execute Workflow Trigger').item.json.id }}.json",
        "asBinaryProperty": false,
        "additionalParameters": {}
      },
      "id": "b714a761-6088-49e8-9fb6-2e7b33d15ebd",
      "name": "Get file data",
      "type": "n8n-nodes-base.github",
      "position": [
        -416,
        32
      ],
      "webhookId": "743111c3-2c21-4658-8097-a9fe966f43d2",
      "typeVersion": 1,
      "alwaysOutputData": true,
      "credentials": {
        "githubApi": {
          "id": "pIwtQRU9cVvbgSTE",
          "name": "GitHub account"
        }
      },
      "continueOnFail": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "6cf546c5-5737-4dbd-851b-17d68e0a3780",
              "name": "repo.owner",
              "type": "string",
              "value": "amitvishwa19"
            },
            {
              "id": "452efa28-2dc6-4ea3-a7a2-c35d100d0382",
              "name": "repo.name",
              "type": "string",
              "value": "n8n_backup"
            },
            {
              "id": "81c4dc54-86bf-4432-a23f-22c7ea831e74",
              "name": "repo.path",
              "type": "string",
              "value": "workflows/"
            }
          ]
        },
        "options": {}
      },
      "id": "7bd5b0ef-bc6e-468b-8d6d-0d55d314c8db",
      "name": "Globals",
      "type": "n8n-nodes-base.set",
      "position": [
        -640,
        192
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "content": "## Edit this node 👇",
        "height": 80,
        "width": 150,
        "color": 4
      },
      "id": "ede2bb39-d750-4933-9001-fecb6c88c98e",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -688,
        80
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "inputSource": "passthrough"
      },
      "id": "5fed3449-319e-4b14-8fbc-c3628e187b28",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "position": [
        -928,
        304
      ],
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "mode": "id",
          "value": "={{ $workflow.id }}"
        },
        "workflowInputs": {
          "value": {},
          "schema": [],
          "mappingMode": "defineBelow",
          "matchingColumns": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "mode": "each",
        "options": {}
      },
      "id": "490d4428-2d75-435c-99e2-da3aec348136",
      "name": "Execute Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "position": [
        16,
        -352
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "content": "## Subworkflow",
        "height": 750.8363163824032,
        "width": 2086.845881354743,
        "color": 6
      },
      "id": "f038e974-da32-4784-ba90-fd5a75f84e03",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1008,
        -80
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Main workflow loop",
        "height": 419,
        "width": 1286,
        "color": 7
      },
      "id": "e8d8df70-91b0-4568-83f3-4fb881c8c544",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1008,
        -528
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.name }}",
                    "rightValue": "README.md",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    },
                    "id": "c2d50d90-665c-424c-866a-f3fd0cf02077"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Readme Exists"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "8ef92f85-55f7-4850-8369-8dd23302c292",
                    "leftValue": "={{ $json.name }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "notExists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "No Readme"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        576,
        -384
      ],
      "id": "314b0fe4-5013-45b0-8ef2-fce31fa4dcb3",
      "name": "Switch"
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "get",
        "owner": {
          "__rl": true,
          "value": "amitvishwa19",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "n8n_backup",
          "mode": "list",
          "cachedResultName": "n8n_backup",
          "cachedResultUrl": "https://github.com/amitvishwa19/n8n_backup"
        },
        "filePath": "README.md",
        "asBinaryProperty": false,
        "additionalParameters": {}
      },
      "type": "n8n-nodes-base.github",
      "typeVersion": 1.1,
      "position": [
        416,
        -384
      ],
      "id": "a51040af-71a1-49bb-8d2f-763f72c4e9af",
      "name": "Check for Readme",
      "webhookId": "b12c4a0c-f6c0-46fb-996f-9968bde50316",
      "credentials": {
        "githubApi": {
          "id": "pIwtQRU9cVvbgSTE",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "owner": {
          "__rl": true,
          "value": "amitvishwa19",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "n8n_backup",
          "mode": "list",
          "cachedResultName": "n8n_backup",
          "cachedResultUrl": "https://github.com/amitvishwa19/n8n_backup"
        },
        "filePath": "README.md",
        "fileContent": "=# N8N Workflow Backup - \nThis folder contains the backup of all N8N workflows as of {{$now.setZone ('Asia/Kolkata').format('dd-MM-yyyy') }}\n\n## Backup Details\n- Backup Time: {{ $now.format('dd-MM-yyyy T') }}\n- Total Workflows: {{ $('n8n').all().length }}\n\n## Files\nEach workflow is saved as a separate JSON file with the format\n\n-----------\n* Automatically generated by NSN Backup Workflow *",
        "commitMessage": "asassas"
      },
      "type": "n8n-nodes-base.github",
      "typeVersion": 1.1,
      "position": [
        800,
        -272
      ],
      "id": "89e5c4b2-0692-433b-a0f6-924a1b054188",
      "name": "Create Readme",
      "webhookId": "b33de990-e692-4041-9882-ac12218cab02",
      "credentials": {
        "githubApi": {
          "id": "pIwtQRU9cVvbgSTE",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "edit",
        "owner": {
          "__rl": true,
          "value": "amitvishwa19",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "n8n_backup",
          "mode": "list",
          "cachedResultName": "n8n_backup",
          "cachedResultUrl": "https://github.com/amitvishwa19/n8n_backup"
        },
        "filePath": "README.md",
        "fileContent": "=# N8N Workflow Backup - \nThis folder contains the backup of all N8N workflows as of {{$now.setZone ('Asia/Kolkata').format('dd-MM-yyyy') }}\n\n## Backup Details\n- Backup Time: {{ $now.format('dd-MM-yyyy T') }}\n- Total Workflows: {{ $('n8n').all().length }}\n\n## Files\nEach workflow is saved as a separate JSON file with the format\n\n-----------\n* Automatically generated by NSN Backup Workflow *",
        "commitMessage": "New Backup"
      },
      "type": "n8n-nodes-base.github",
      "typeVersion": 1.1,
      "position": [
        800,
        -448
      ],
      "id": "449c0a57-3c84-4726-9b65-2e45fbb9b984",
      "name": "Edit Readme",
      "webhookId": "4edbb934-e752-46b4-99b6-3f484e780c01",
      "executeOnce": false,
      "credentials": {
        "githubApi": {
          "id": "pIwtQRU9cVvbgSTE",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Check github for Readme file and create or update\n",
        "height": 416,
        "width": 720,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        352,
        -528
      ],
      "typeVersion": 1,
      "id": "b264ed70-691d-470f-a27f-a3f8db5356b3",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "C09DPF7DS2V",
          "mode": "list",
          "cachedResultName": "dev-n8n"
        },
        "text": "=# N8N Workflow Backup - \nThis folder contains the backup of all N8N workflows as of {{$now.setZone ('Asia/Kolkata').format('dd-MM-yyyy') }}\n\n## Backup Details\n- Backup Time: {{ $now.format('dd-MM-yyyy T') }}\n- Total Workflows: {{ $('n8n').all().length }}\n\n## Files\nEach workflow is saved as a separate JSON file with the format",
        "otherOptions": {
          "includeLinkToWorkflow": false
        }
      },
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.3,
      "position": [
        48,
        -496
      ],
      "id": "93ed6535-bf81-47fe-9b1b-05905c56bc0d",
      "name": "Send Success Message",
      "webhookId": "960e06b8-d81d-4782-914f-895cee4ca540",
      "credentials": {
        "slackApi": {
          "id": "WI0VJ7cnXk6TFCHK",
          "name": "Slack account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nconst count = $input.all().length;\n\nreturn [\n  {\n    json: {\n      itemCount: count\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -208,
        -496
      ],
      "id": "157643ac-420f-46c1-813d-9f7daef5c2e6",
      "name": "Code in JavaScript"
    },
    {
      "parameters": {
        "trigger": [
          "any_event"
        ],
        "channelId": {
          "__rl": true,
          "value": "C09DPF7DS2V",
          "mode": "list",
          "cachedResultName": "dev-n8n"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.slackTrigger",
      "typeVersion": 1,
      "position": [
        -976,
        -240
      ],
      "id": "24a433a8-46cd-4b15-97e7-317d0224f486",
      "name": "Slack Trigger",
      "webhookId": "af7d3b23-ef54-42c6-83b2-e9ee74a9ee72",
      "credentials": {
        "slackApi": {
          "id": "WI0VJ7cnXk6TFCHK",
          "name": "Slack account"
        }
      }
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-10-03T05:47:21.118Z",
      "updatedAt": "2025-10-03T05:47:21.118Z",
      "role": "workflow:owner",
      "workflowId": "fGnwvvsMQfD7xuoi",
      "projectId": "hWHkhBemod06cHxZ"
    }
  ],
  "staticData": {
    "node:Schedule Trigger": {
      "recurrenceRules": []
    }
  },
  "tags": [],
  "triggerCount": 2,
  "updatedAt": "2025-10-03T06:52:11.000Z",
  "versionId": "f6de4882-01fd-4dbf-91ff-60d987e2602b"
}