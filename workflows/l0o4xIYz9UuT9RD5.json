{
  "active": false,
  "connections": {
    "n8n": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Globals": {
      "main": [
        [
          {
            "node": "Get file data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get File": {
      "main": [
        [
          {
            "node": "Merge Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File is new": {
      "main": [
        [
          {
            "node": "Create new file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge Items": {
      "main": [
        [
          {
            "node": "isDiffOrNew",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "isDiffOrNew": {
      "main": [
        [
          {
            "node": "Check Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Status": {
      "main": [
        [
          {
            "node": "Same file - Do nothing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "File is different",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "File is new",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get file data": {
      "main": [
        [
          {
            "node": "If file too large",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create new file": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Check for Readme",
            "type": "main",
            "index": 0
          },
          {
            "node": "Send Success Message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Execute Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "n8n",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File is different": {
      "main": [
        [
          {
            "node": "Edit existing file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If file too large": {
      "main": [
        [
          {
            "node": "Get File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit existing file": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "On clicking 'execute'": {
      "main": [
        [
          {
            "node": "n8n",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Same file - Do nothing": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "Globals",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge Items",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Edit Readme",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Create Readme",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check for Readme": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-09-24T04:03:57.939Z",
  "id": "l0o4xIYz9UuT9RD5",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Workflow Backup v2",
  "nodes": [
    {
      "parameters": {},
      "id": "9a3204a5-35d9-4b16-981b-f5db9443502c",
      "name": "On clicking 'execute'",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        -688,
        -32
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "filters": {},
        "requestOptions": {}
      },
      "id": "5b9396c5-8f32-477b-9b8e-009376979688",
      "name": "n8n",
      "type": "n8n-nodes-base.n8n",
      "position": [
        -432,
        64
      ],
      "typeVersion": 1,
      "credentials": {
        "n8nApi": {
          "id": "1nXgG54n3mhBimUi",
          "name": "n8n account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8d513345-6484-431f-afb7-7cf045c90f4f",
              "name": "Done",
              "type": "boolean",
              "value": true
            }
          ]
        },
        "options": {}
      },
      "id": "463ada94-f151-481b-8917-78fd67d72fe4",
      "name": "Return",
      "type": "n8n-nodes-base.set",
      "position": [
        1152,
        560
      ],
      "typeVersion": 3.3
    },
    {
      "parameters": {
        "url": "={{ $json.download_url }}",
        "options": {}
      },
      "id": "89d5df34-b658-44ab-9481-944c4cef0bc6",
      "name": "Get File",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        256,
        432
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 1,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "45ce825e-9fa6-430c-8931-9aaf22c42585",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              },
              "leftValue": "={{ $json.content }}",
              "rightValue": ""
            },
            {
              "id": "9619a55f-7fb1-4f24-b1a7-7aeb82365806",
              "operator": {
                "type": "string",
                "operation": "notExists",
                "singleValue": true
              },
              "leftValue": "={{ $json.error }}",
              "rightValue": ""
            }
          ]
        },
        "options": {}
      },
      "id": "20bb4aac-0399-4203-90c3-79871fc4c1cf",
      "name": "If file too large",
      "type": "n8n-nodes-base.if",
      "position": [
        48,
        464
      ],
      "typeVersion": 2
    },
    {
      "parameters": {},
      "id": "26db5e2c-6991-49fb-9eb7-f4daf4f0bc9b",
      "name": "Merge Items",
      "type": "n8n-nodes-base.merge",
      "position": [
        48,
        720
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "jsCode": "const orderJsonKeys = (jsonObj) => {\n  const ordered = {};\n  Object.keys(jsonObj).sort().forEach(key => {\n    ordered[key] = jsonObj[key];\n  });\n  return ordered;\n}\n\n// Check if file returned with content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Decode base64 content and parse JSON\n  const origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64').toString());\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n// No file returned / new workflow\n} else if (Object.keys($input.all()[0].json).includes(\"data\")) {\n  const origWorkflow = JSON.parse($input.all()[0].json.data);\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n\n} else {\n  // Order JSON object\n  const n8nWorkflow = $input.all()[1].json;\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n  \n  // Proper formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return items\nreturn $input.all();"
      },
      "id": "5d16b31f-58be-4607-87be-d143b353cce3",
      "name": "isDiffOrNew",
      "type": "n8n-nodes-base.code",
      "position": [
        256,
        720
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "dataType": "string",
        "value1": "={{$json.github_status}}",
        "rules": {
          "rules": [
            {
              "value2": "same"
            },
            {
              "value2": "different",
              "output": 1
            },
            {
              "value2": "new",
              "output": 2
            }
          ]
        }
      },
      "id": "792b4c3e-e09c-4ca9-bd00-9567bff8a182",
      "name": "Check Status",
      "type": "n8n-nodes-base.switch",
      "position": [
        464,
        720
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "cc3951ea-1dda-44e9-bae4-533fd49ed959",
      "name": "Same file - Do nothing",
      "type": "n8n-nodes-base.noOp",
      "position": [
        688,
        560
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "92aea70d-5d6f-481d-8c74-42991dffdaed",
      "name": "File is different",
      "type": "n8n-nodes-base.noOp",
      "position": [
        688,
        720
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "ea9ed7c3-2060-4731-9d7f-94542abdcf49",
      "name": "File is new",
      "type": "n8n-nodes-base.noOp",
      "position": [
        688,
        880
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "file",
        "owner": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Globals').item.json.repo.owner }}"
        },
        "repository": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Globals').item.json.repo.name }}"
        },
        "filePath": "={{ $('Globals').item.json.repo.path }}{{$('Execute Workflow Trigger').first().json.id}}.json",
        "fileContent": "={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}",
        "commitMessage": "={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})"
      },
      "id": "3137da71-a216-44ce-8bae-44a51dc57ec6",
      "name": "Create new file",
      "type": "n8n-nodes-base.github",
      "position": [
        912,
        880
      ],
      "webhookId": "e5e4ce8b-74a3-4b94-83ca-351edc280faf",
      "typeVersion": 1,
      "credentials": {
        "githubApi": {
          "id": "bbmcSokLK6Dm4sdi",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "edit",
        "owner": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Globals').item.json.repo.owner }}"
        },
        "repository": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Globals').item.json.repo.name }}"
        },
        "filePath": "={{ $('Globals').item.json.repo.path }}{{$('Execute Workflow Trigger').first().json.id}}.json",
        "fileContent": "={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}",
        "commitMessage": "={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})"
      },
      "id": "d675b8a7-f9fc-407b-9023-795b3e657fd8",
      "name": "Edit existing file",
      "type": "n8n-nodes-base.github",
      "position": [
        912,
        704
      ],
      "webhookId": "a57e71de-4960-4d25-a59f-1a9e2e96aff5",
      "typeVersion": 1,
      "credentials": {
        "githubApi": {
          "id": "bbmcSokLK6Dm4sdi",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "60e75b12-e3d3-4d15-a781-86ca0980d1ef",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        -224,
        64
      ],
      "typeVersion": 3
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours",
              "hoursInterval": 2
            }
          ]
        }
      },
      "id": "4d637c5b-92c6-403f-b3b0-b7b1cd0e258d",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        -688,
        160
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "get",
        "owner": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $json.repo.owner }}"
        },
        "repository": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $json.repo.name }}"
        },
        "filePath": "={{ $json.repo.path }}{{ $('Execute Workflow Trigger').item.json.id }}.json",
        "asBinaryProperty": false,
        "additionalParameters": {}
      },
      "id": "72551d08-8ab8-44b6-ab91-793e541b49df",
      "name": "Get file data",
      "type": "n8n-nodes-base.github",
      "position": [
        -144,
        464
      ],
      "webhookId": "743111c3-2c21-4658-8097-a9fe966f43d2",
      "typeVersion": 1,
      "alwaysOutputData": true,
      "credentials": {
        "githubApi": {
          "id": "bbmcSokLK6Dm4sdi",
          "name": "GitHub account"
        }
      },
      "continueOnFail": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "6cf546c5-5737-4dbd-851b-17d68e0a3780",
              "name": "repo.owner",
              "type": "string",
              "value": "amitvishwa19"
            },
            {
              "id": "452efa28-2dc6-4ea3-a7a2-c35d100d0382",
              "name": "repo.name",
              "type": "string",
              "value": "n8n_backup"
            },
            {
              "id": "81c4dc54-86bf-4432-a23f-22c7ea831e74",
              "name": "repo.path",
              "type": "string",
              "value": "workflows/"
            }
          ]
        },
        "options": {}
      },
      "id": "94a31ba6-e431-4be2-a3a8-4d87be46e97b",
      "name": "Globals",
      "type": "n8n-nodes-base.set",
      "position": [
        -368,
        624
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "content": "## Edit this node 👇",
        "height": 80,
        "width": 150,
        "color": 4
      },
      "id": "15fff895-11dc-4005-83ae-880e41a84848",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -416,
        512
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "inputSource": "passthrough"
      },
      "id": "634088d1-4bc4-4b64-963e-a79f822b052d",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "position": [
        -656,
        736
      ],
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "mode": "id",
          "value": "={{ $workflow.id }}"
        },
        "workflowInputs": {
          "value": {},
          "schema": [],
          "mappingMode": "defineBelow",
          "matchingColumns": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "mode": "each",
        "options": {}
      },
      "id": "001e272f-1c27-4c32-8e55-778f8950fe85",
      "name": "Execute Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "position": [
        0,
        80
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "content": "## Subworkflow",
        "height": 750.8363163824032,
        "width": 2086.845881354743,
        "color": 6
      },
      "id": "efd0264d-b252-458e-8209-cb0e08ffdc52",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -736,
        352
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Main workflow loop",
        "height": 435,
        "width": 886,
        "color": 7
      },
      "id": "c7a919dc-9695-4b41-91b5-4e6a311ee389",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -736,
        -112
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.name }}",
                    "rightValue": "README.md",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    },
                    "id": "c2d50d90-665c-424c-866a-f3fd0cf02077"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Readme Exists"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "8ef92f85-55f7-4850-8369-8dd23302c292",
                    "leftValue": "={{ $json.name }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "notExists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "No Readme"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        448,
        48
      ],
      "id": "317ad4fa-d3f1-49a2-a930-de2b2a9d00da",
      "name": "Switch"
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "get",
        "owner": {
          "__rl": true,
          "value": "amitvishwa19",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "n8n_backup",
          "mode": "list",
          "cachedResultName": "n8n_backup",
          "cachedResultUrl": "https://github.com/amitvishwa19/n8n_backup"
        },
        "filePath": "README.md",
        "asBinaryProperty": false,
        "additionalParameters": {}
      },
      "type": "n8n-nodes-base.github",
      "typeVersion": 1.1,
      "position": [
        256,
        48
      ],
      "id": "6f6a74f7-9da9-455e-8db3-f04d38058ba7",
      "name": "Check for Readme",
      "webhookId": "b12c4a0c-f6c0-46fb-996f-9968bde50316",
      "credentials": {
        "githubApi": {
          "id": "bbmcSokLK6Dm4sdi",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "owner": {
          "__rl": true,
          "value": "amitvishwa19",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "n8n_backup",
          "mode": "list",
          "cachedResultName": "n8n_backup",
          "cachedResultUrl": "https://github.com/amitvishwa19/n8n_backup"
        },
        "filePath": "README.md",
        "fileContent": "=# N8N Workflow Backup - \nThis folder contains the backup of all N8N workflows as of {{$now.setZone ('Asia/Kolkata').format('dd-MM-yyyy') }}\n\n## Backup Details\n- Backup Time: {{ $now.format('dd-MM-yyyy T') }}\n- Total Workflows: {{ $('n8n').all().length }}\n\n## Files\nEach workflow is saved as a separate JSON file with the format\n\n-----------\n* Automatically generated by NSN Backup Workflow *",
        "commitMessage": "asassas"
      },
      "type": "n8n-nodes-base.github",
      "typeVersion": 1.1,
      "position": [
        736,
        160
      ],
      "id": "5d178047-f8d3-4595-8f8d-7cea05fec79b",
      "name": "Create Readme",
      "webhookId": "b33de990-e692-4041-9882-ac12218cab02",
      "credentials": {
        "githubApi": {
          "id": "bbmcSokLK6Dm4sdi",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "edit",
        "owner": {
          "__rl": true,
          "value": "amitvishwa19",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "n8n_backup",
          "mode": "list",
          "cachedResultName": "n8n_backup",
          "cachedResultUrl": "https://github.com/amitvishwa19/n8n_backup"
        },
        "filePath": "README.md",
        "fileContent": "=# N8N Workflow Backup - \nThis folder contains the backup of all N8N workflows as of {{$now.setZone ('Asia/Kolkata').format('dd-MM-yyyy') }}\n\n## Backup Details\n- Backup Time: {{ $now.format('dd-MM-yyyy T') }}\n- Total Workflows: {{ $('n8n').all().length }}\n\n## Files\nEach workflow is saved as a separate JSON file with the format\n\n-----------\n* Automatically generated by NSN Backup Workflow *",
        "commitMessage": "New Backup"
      },
      "type": "n8n-nodes-base.github",
      "typeVersion": 1.1,
      "position": [
        736,
        -16
      ],
      "id": "8465565b-6076-4d41-9926-d9a638effc4b",
      "name": "Edit Readme",
      "webhookId": "4edbb934-e752-46b4-99b6-3f484e780c01",
      "credentials": {
        "githubApi": {
          "id": "bbmcSokLK6Dm4sdi",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Check github for Readme file and create or update\n",
        "height": 416,
        "width": 752,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        208,
        -96
      ],
      "typeVersion": 1,
      "id": "2a60b694-6e52-4a28-81e6-91a25a38c8a3",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "select": "user",
        "user": {
          "__rl": true,
          "value": "U05BZ940QSG",
          "mode": "list",
          "cachedResultName": "devlomatix"
        },
        "text": "=Backup done at {{$now.format('dd-MM-yyyy T')}}",
        "otherOptions": {}
      },
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.3,
      "position": [
        256,
        192
      ],
      "id": "dd50287d-04da-40f3-95eb-eff98e495d6a",
      "name": "Send Success Message",
      "webhookId": "960e06b8-d81d-4782-914f-895cee4ca540",
      "credentials": {
        "slackOAuth2Api": {
          "id": "Y3dMRydYavtifKNr",
          "name": "Slack account 2"
        }
      }
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-09-24T04:03:57.945Z",
      "updatedAt": "2025-09-24T04:03:57.945Z",
      "role": "workflow:owner",
      "workflowId": "l0o4xIYz9UuT9RD5",
      "projectId": "Jhxl57jBaP5qwf3G"
    }
  ],
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-09-24T07:08:03.000Z",
  "versionId": "25ab6769-249f-49ca-a541-0e52cfdfbc5a"
}